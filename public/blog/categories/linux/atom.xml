<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | weatheredwatcher]]></title>
  <link href="http://www.weatheredwatcher.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://www.weatheredwatcher.com/"/>
  <updated>2014-08-23T15:01:30-04:00</updated>
  <id>http://www.weatheredwatcher.com/</id>
  <author>
    <name><![CDATA[weatheredwatcher]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Server Stuff a Developer Needs to Know (part 1)]]></title>
    <link href="http://www.weatheredwatcher.com/blog/2014/08/23/server-stuff-a-developer-needs-to-know/"/>
    <updated>2014-08-23T00:11:28-04:00</updated>
    <id>http://www.weatheredwatcher.com/blog/2014/08/23/server-stuff-a-developer-needs-to-know</id>
    <content type="html"><![CDATA[<p>Recently I have been moving more and more away from development and more into System Administration.  Still, my skills and experience in programming
means that I also have a good handle on developers. So I have been making a effort to move in the direction of DevOps.  I do some consultation work for
a startup that is currently coming out of the USC Incubator.  I mostly contribute as the Architect and help provide direction to the infrastructure and
coding best practices as well as run their servers.  So this fits perfectly in the role of DevOps.  One of the things that has really begun to frustrate me
is the lack of BASIC linux skills in developers that should know better.  I am not asking you to setup a fucking mail server or configure a load balancer.
I can do those things just fine without your help.  But there are certain things that a developer NEEDS to know how to do. So, here is the first in a series of posts
on some things that in my humble opinion a developer should be able to do without me holding their goddamn hand!</p>

<h2>Logging into and Deploying Code to a Server</h2>

<p>Guys, this is not that hard.  First of all: A secure server should be using ssh &mdash; NOT ftp.  Do not ask me for FTP access to my server.  I will not
give it to you.  No matter how many times you ask me to.</p>

<p>You can connect to a server using ssh like this:</p>

<pre><code>ssh username@hostname
</code></pre>

<p>If you do not want to use a password, or if I decide not to give you one, you will need to provide me with a public key.  It is fairly easy.  On a
Linux/Unix system, in the termianl type:</p>

<pre><code>ssh-keygen -t rsa -f ~/.ssh/id_rsa
</code></pre>

<p>This will give you a key pair. Email me the one with the .pub extension</p>

<pre><code>id_rsa.pub
</code></pre>

<p>Running Windows?  Either install git and use git-bash or install Cygwin and run the Bash shell.  The above commands will work for you too.</p>

<p>Then you should be able to log in without a password.   Having issues?</p>

<pre><code>ssh user@hostname -i ~/.ssh/id_rsa.pub
</code></pre>

<p>Rather do it yourself? Once you have logged in to the server with your given user name, you can add your key to the authorized_keys file.</p>

<p>It needs to be in a file called  ~/.ssh/authorized_keys</p>

<p>Now on to deployment.  Most of the time there is going to be some procedure in place for production deployments, but not so much on a dev server.
You should be able to upload your code to the server. Aside from using git, which is just easy, I personally like secure copy or scp.  It is fairly simple to use,
especially if you already have a key setup on the remote server.  The syntax is easy:</p>

<pre><code>scp -r localfolder/ user@remotehost:/path/to/server
</code></pre>

<p>If you would rather use rsync:</p>

<pre><code>rsync -r localfolder/ user@remotehost:/path/to/server
</code></pre>

<p>It&rsquo;s not rocket science people!  Learn some basic Linux!</p>
]]></content>
  </entry>
  
</feed>
